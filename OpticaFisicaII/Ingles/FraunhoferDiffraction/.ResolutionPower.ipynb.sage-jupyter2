{"output":{"0":{"data":{"image/png":"04fa56464d6d51da879881f52dd36446bc548680"},"metadata":{"image/png":{"height":481,"width":1063}}}},"exec_count":7,"start":1517238297783,"input":"import numpy as np\nimport matplotlib.pyplot as plt\n% matplotlib inline\nfrom scipy.special import j1\n\n# Parameters\n############\nfprime = 300 # focal lens\nDa = 2 # mm\nDobj = 3000 # distance from the lens to the two points objects\nd = 1 # separation between points objects\nLambda = 5.5e-4\nk = 2 * np.pi / Lambda\n################\n# Calculations\n###############\n\ntheta = np.arctan (d / Dobj)\nsprime = (-Dobj * fprime) / (- Dobj + fprime) # distance lens-screen\nx0 = sprime * (d / Dobj)\nx = np.linspace(-2*x0,2*x0,350)  # distance to the axis on the screen\n\n#Cut in 1D\nI0 = 1 # mW / cm ^ 2\nIcirc1 = I0 * (j1 (k * 0.5 * Da * (x-x0 / 2) / sprime) / (k * 0.5 * Da * (x-x0 / 2) / sprime)) ** 2\nIcirc2 = I0 * (j1 (k * 0.5 * Da * (x + x0 / 2) / sprime) / (k * 0.5 * Da * (x + x0 / 2) / sprime)) ** 2\nIcirc = Icirc1 + Icirc2\nrayleigh = 1.22 * sprime * Lambda / Da - x0 / 2\nfig, ax = plt.subplots (1,2, figsize = (18,8), frameon = False)\n\nax [0] .plot (x, Icirc1, label = 'Image 1')\nax [0] .plot (x, Icirc2, label = 'Image 2')\nax [0] .plot (x, Icirc, label = 'Total')\nax [0] .vlines (rayleigh, 0, np.amax (Icirc), label = 'Separ min Rayleigh')\nax [0] .spines ['right']. set_visible (False)\nax [0] .spines ['top']. set_visible (False)\n\nax [0] .legend ()\nax [0] .set_xlabel (\"x (mm)\")\nax [0] .set_ylabel (\"I (u.a.)\");\n\n\n#In 2D\n[X, Y] = np.meshgrid (x, x)\nR1 = np.sqrt ((X + x0 / 2) ** 2 + Y ** 2)\nR2 = np.sqrt ((X-x0 / 2) ** 2 + Y ** 2)\nIcirc1 = I0 * (j1 (k * 0.5 * Da * R1 / sprime) / (k * 0.5 * Da * R1 / sprime)) ** 2\nIcirc2 = I0 * (j1 (k * 0.5 * Da * R2 / sprime) / (k * 0.5 * Da * R2 / sprime)) ** 2\nIcirctot = Icirc1 + Icirc2\nax [1] .pcolormesh (x, x, Icirctot, cmap = 'hot')\nax [1] .set_xlabel ('x (mm)')\nax [1] .set_ylabel ('y (mm)');","state":"done","pos":2,"cell_type":"code","type":"cell","end":1517238299873,"id":"3f819f","kernel":"anaconda3"}
{"type":"cell","id":"1c6656","pos":0,"input":"# Introduction\n\nWe have seen how the diffraction determines that the irradiance in a screen located after an opening, will not have the spatial distribution fixed by the geometric shadow of said opening. The beam opens and shows maximum and minimum on the screen. This observation can be interpreted by applying the Huygens-Fresnel principle, that is, calculating the interference of the secondary waves emitted by each point of the wave front that the aperture allows to pass.\n\nWe have also seen previously that in the particular case of a circular opening, the distribution of irradiance on the screen is known as Airy disk, characterized by a central maximum where most of the energy is distributed and lateral lobes less and less intense . Due to this profile, the size of the Airy spot is usually specified by giving the diameter (or radius) of the first dark ring, or the angle subtended with the optical axis by this minimum from the opening if the sizeis expressed in angular units.\n\nThis value of the angle that gives the position of the first minimum of the Airy disk follows the expression,\n\n$$ \\theta_1 = \\frac {1.22 \\lambda} {\\Phi} $$\n\nwhere $ \\lambda $ is the wavelength that illuminates the system and $ \\Phi $ is the diameter of the aperture.\n\n![Airy Function](640px-Airy_pattern_scaled.svg.png)\n\n----------\n\nThis distribution of irradiance caused by a circular aperture takes great importance when introducing the effects of diffraction on the formation of the image of an optical system. Indeed, every optical system has a finite transversal dimension, normally given by the size of the included lenses or diaphragms. This finite size causes the beam coming from an object from which one wants to form its image to be cut at its entrance to the system, thus appearing the diffraction effects discussed in this topic. The result is that the prediction made by Geometric Optics for a perfect optical system by which the image of a point is a point is no longer valid for diffraction. By including this effects, the image of a point will be a smear of diffraction. On the other hand, and given that most of the lenses and diaphragms used have a circular shape, this spot will be the Airy disk discussed above.","cell_type":"markdown"}
{"type":"cell","id":"c388d2","pos":1,"input":"# Limitation on the resolution of two specific objects nearby\n\nWe can easily understand that, if the image of a point is not another point due to diffraction, but is a spatial distribution of irradiance with a certain extension, the images of two nearby objects can overlap each other in the image plane, resulting in a slightly larger stain. In this way, we may not be able to distinguish the images of those two nearby points. In other words, the fact that diffraction imposes a certain size on the image of an object point given by an optical system, limits the ability of the system to solve two nearby object points.\n\n\n## Rayleigh criterion\n\nAlthough distinguishing between two superimposed images can be somewhat subjective, a criterion has been developed to discriminate if two images are sufficiently separated from each other so that we can say that the system solves those two points. This criterion is called ** Rayleigh criterion ** and according to it * two images are resolved if, at least, the separation between the maxima of the Airy spots is equal to the radius of the first minimum *.\n\nThe following code calculates the images given by a lens of two points near objects. The distance between these points, the wavelength, the focal length of the lens or the distance to the lens can be modified. In the figure, a profile of the irradiance in the image plane is shown next to the reference that marks the separation imposed by the Rayleigh criterion so that two points are resolved. Also on the right is the 2D image of what we would observe on the screen.","cell_type":"markdown"}
{"type":"cell","id":"d5df4c","pos":3,"input":"### Issues\n\nModify the parameters of the previous code, re-executing the cell to answer the following questions:\n\n1. Modify the separation between the object points to observe a situation in which the points are not solved by the lens and another in which if they are.\n\n2. If we start from a situation where two object points are not resolved, how would we have to modify $ \\lambda $ to get them resolved?\n\n3. We could get to move from a situation in which two object points are not resolved to another in which thay are resolved by only varying the lens focal length\n\n4. How would the code change if instead of a lens in air we consider that behind the lens there is a medium with a certain refractive index?","cell_type":"markdown"}
{"type":"file","last_load":1516893802954}
{"type":"settings","kernel":"anaconda3","backend_state":"running","metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.5.4"}},"kernel_usage":{"cpu":0,"memory":87166976},"trust":true,"kernel_state":"idle"}