{"output":{"0":{"data":{"image/png":"3640f86a93a76b5a28dbefbc4cb8b092b4fb5391"}}},"exec_count":1,"start":1516807630649,"input":"from numpy import *\nfrom matplotlib.pyplot import *\n% matplotlib inline\nstyle.use ('seaborn-poster')\n\n# Parameters\n###########\nLambda = 632.8e-6 # wavelength of radiation in mm\nfocal = 500 # focal length of the lens in mm. We consider that we observe in the focal plane of a lens.\na = 0.05 # width of the slit in mm\n############\n\nk = 2.0 * pi / Lambda\nyp = linspace (-20,20,500) # vector of positions on the screen in mm\nbeta = k * a * yp / (2.0 * focal)\nI0 = 1 # in mW / cm ^ 2\nIP = I0 * (sin (beta) / beta) ** 2\n\n# In 2D\n[X, Y] = meshgrid (yp, yp)\nbeta2 = k * a * X / (2.0 * focal)\nIP2 = I0 * (sin (beta2) / beta2) ** 2\nfig = figure (figsize = (14,7))\nsubplot (121)\nplot (yp, IP)\nxlabel (\"y_P (mm)\")\nylabel (r'I $ _0 $ ')\nsubplot (122)\npcolormesh (yp, yp, IP2, cmap = 'hot');","state":"done","pos":7,"cell_type":"code","type":"cell","end":1516807631485,"id":"fa13fc","kernel":"python2"}
{"output":{"0":{"data":{"image/png":"abb0ab108d2684bc4e8957ed71cf6043bdce7eea"}}},"exec_count":3,"start":1516807815251,"input":"from scipy.special import j1\n\n# Parameters\n#############\nDa = 0.1 # mm\nD = 2000 # distance between the aperture and the observation screen\nI0 = 1 # mW / cm ^ 2\n############\n\nr = linspace (0.001,50,100)\n#Cut in 1D\nfig = figure (figsize = (14,7))\nsubplot (121)\nIcirc = I0 * (j1 (k * 0.5 * Da * r / D) / (k * 0.5 * Da * r / D)) ** 2\nplot (r, Icirc)\nxlabel (\"r (mm)\")\nylabel (\"I (u.a.)\");\n\n#In 2D\nx = linspace (-50,50,100)\n[X, Y] = meshgrid (x, x)\nR = sqrt (X ** 2 + Y ** 2)\nIcirc2 = I0 * (j1 (k * 0.5 * Da * R / D) / (k * 0.5 * Da * R / D)) ** 2\nsubplot (122)\npcolormesh (x, x, Icirc2, cmap = 'hot')\nxlabel ('x (mm)')\nxlim ([- 50,50])\nylim ([- 50,50])\nylabel ('y (mm)');","state":"done","pos":12,"cell_type":"code","type":"cell","end":1516807816579,"id":"f5b8f8","kernel":"python2"}
{"output":{"0":{"data":{"text/plain":"<matplotlib.text.Text at 0x7fb95d4fa550>"},"exec_count":2},"1":{"data":{"image/png":"3176c8483391719784e22ae8b4144bba6f713af7"}}},"exec_count":2,"start":1516807712454,"input":"def fun(x):\n    if(abs(x)<0.05/2):\n        return 1.0\n    else:\n        return 0.0\n    \ny = linspace(-0.5,0.5,140)\nfunvec = vectorize(fun)\nfieldinc = funvec(y)\nfrom scipy.fftpack import fft, fftfreq\nfig = figure(figsize=(10,6))\nfreq = fftfreq(y.shape[0],y[1]-y[0])\ntffield = fft(fieldinc)\ntffield2 = abs(tffield)**2/max(abs(tffield))**2\nplot(freq,abs(fft(fieldinc))**2/max(abs(fft(fieldinc)))**2)\nylabel(\"I\")\n","state":"done","pos":9,"cell_type":"code","type":"cell","end":1516807712814,"id":"a6e959","kernel":"python2"}
{"type":"cell","id":"135cef","pos":8,"input":"We have previously commented that the Fraunhofer diffraction was no more than the Fourier transform of the field in the aperture (rather, the field is proportional to the Fourier transform). Let's see this.\n\nIn the code presented below, a field is calculated in the opening. Since we assume that a flat wave arrives, the field in the aperture will be nothing more than a constant value for the points within the aperture and null in the points outside the aperture. In the code, this field is called * fieldinc *. Subsequently, the code uses the standard * fft * function to calculate the Fourier transform of that field. Finally, we represent the square of the absolute value of that transform, which must be proportional to the irradiance shown above.\n\nWe can see how the obtained function is equal to the one represented above. Although a more detailed analysis should take into account the transformation between the frequencies used in the code and the values ​​of * and * in the observation plane, we will not enter there. It is enough for the moment to exemplify the relation between the Fourier transform and the irradiance obtained in the Fraunhofer regime.","cell_type":"markdown"}
{"type":"cell","id":"1f4edb","pos":13,"input":"We see that it has circular symmetry, and that the secondary maximums are much smaller in amplitude than the central peak, which means that practically all the energy is in the central maximum. To observe how the form of this function varies with the dimension of the opening, modify the parameter $ D_a $ in the previous code and execute it again.","cell_type":"markdown"}
{"type":"cell","id":"43c609","pos":0,"input":"# Fraunhofer diffraction","cell_type":"markdown"}
{"type":"cell","id":"4d3fe1","pos":14,"input":"## Resolution power of an optical system","cell_type":"markdown"}
{"type":"cell","id":"63a375","pos":4,"input":"Solving the previous integral will depend on the shape of the opening, and the distance $ s $ and $ r $ between the opening and the point $ P $ in which we want to calculate the field and the point $ P_0 $ source of the spherical wave incident in the opening. We are not going to see the general calculation, but we are going to focus on the approximation known as Fraunhofer regime (or diffraction). This approximation corresponds to the fact that the source $ P_0 $ and the observation point $ P $ are sufficiently far from the opening. From now on we will refer to the points $ P $ and $ P_0 $ for their Cartesian coordinates taking as origin the plane of the opening, which we will call $ (x, y, z) $ and $ (x_0, y_0, z_0) $ respectively. Also, the coordinates of a point in the opening will be denoted by $ (\\chi, \\eta) $.\n\nWe can show that the Fraunhofer regime can be obtained when it is fulfilled,\n\n$$ min (z, z_0)> \\frac {a^2} {\\lambda} $$\n\nwhere in the previous expression, $ z $ is the distance between the opening and $ P $, $ z_0 $ the distance between $ P_0 $ and the opening, $ a $ is the dimension of the opening, and finally $ \\lambda $ is the wavelength of light.\n\nOne way to satisfy the previous requirement is to place the source $ P_0 $ and the observation point $ P $ at infinity effectively, that is, in the focal planes of two lenses located on both sides of the aperture.\n\nUnder this condition, it can be shown that the resulting field in $ P $ is given by the following expression,\n\n$$ E_P = C \\int_{\\Sigma} E_0 (\\chi, \\eta) e^{i k (p \\chi + q \\eta)} d \\chi d \\eta $$\n\nwhere we remember that $ \\chi, \\eta $ are the Cartesian variables in the plane of the opening (we are adding all the contributions of the surface elements in which we divide the opening). Further,\n$$ p = \\frac{x_0}{z_0} + \\frac{x}{z} $$\nY\n$$ q = \\frac{y_0}{z_0} + \\frac{y}{z} $$\n\nThe expression of $ E_P $ written in the above manner is nothing more than the Fourier transform of the field in the opening $ E_0 (\\chi, \\eta) $. If the aperture has a certain transmittance $ t (\\chi, \\eta) $, the field immediately after will be $ t (\\chi, \\eta) E_0 (\\chi, \\eta) $ and it will be this product that we have to introduce in the expression of $ E_P $.","cell_type":"markdown"}
{"type":"cell","id":"722b77","pos":11,"input":"In the case of a circular opening of diameter $ D_a $, the expression of the electric field at a point $ P $ that subtends an angle $ \\theta $ with the axis, and under the approximation considered in the Fraunhofer regime is as follows,\n\n$$ E (\\theta) = C \\frac{J_1 (k \\frac{D_a} {2} sin (\\theta))} {k \\frac{D_a} {2} sin (\\theta)} $$\n\nand therefore the irradiance,\n\n$$ I (\\theta) = I_0 \\left (\\frac{J_1 (k \\frac{D_a} {2} sin (\\theta))} {k \\frac{D_a} {2} sin (\\theta)} \\right) ^ 2 $$\n\nThis function is called * Airy * stain and it is fundamental to understand the formation of the image of optical systems including the wave nature of the light, as well as its resolving power.\n\nIf we observe the diffraction pattern on a screen located at a distance $ D $ from the aperture, and we call $ r $ a the distance from the observation point $ P $ to the axis of the optical system, we will have $ tan (\\theta) = r / D $. On the other hand, if we consider that the angle subtended by the point $ P $ is small, $ sin (\\theta) \\simeq tan (\\theta) = r / D $, being able to substitute the sine in the previous expressions for this quotient.\n\nThe form of this function can be seen in the following figure.","cell_type":"markdown"}
{"type":"cell","id":"7e236a","pos":3,"input":"The electric field in the opening will be due to the incident spherical wave,\n\n$$E = \\frac{E_0}{r} e^{i k r}$$\n\nNow to calculate the electric field in $ P $, we first consider each surface element $ d \\Sigma $ of the aperture as a spherical wave emitter center, and then we will add (or put another way, we will interfere) the contributions of all the surface elements to obtain the total electric field. The individual contribution of the surface element $ d \\Sigma $ to the total field in $ P $ will be,\n\n$$dE_p = \\frac{E_0}{r} e^{i k r} \\frac{e^{i k s}}{s} d\\Sigma$$\n\nIn the previous expression we have simply written a spherical wave that propagates a distance $ s $ (hence the term $ \\frac{e^{iks}}{s} $, as the excitation of this wave is due to another spherical wave incident, its amplitude will be $ \\frac{E_0}{r} e^{ikr} d \\Sigma $, that is, proportional to the chosen surface element.\n\nNow, the total field will be calculated by adding all the contributions of the surface elements distributed by every aperture. That is to say,\n\n$$E_p = \\int_{\\Sigma} \\frac{E_0}{r s} e^{i k (r + s)} d\\Sigma$$","cell_type":"markdown"}
{"type":"cell","id":"a4430d","pos":1,"input":"Diffraction is the tendency of every wave to depart from straight propagation as it propagates or passes through an opening or obstacle.\n\nThis effect is basically the result of interferential processes and therefore is intimately related to the wave nature of light.\n\nFor its study we are going to be based on the ** Principle of Huygens-Fresnel **, which it is necessary to emphasize that it is an approximation. For a complete treatment of diffraction we must turn to Maxwell's equations. However, the use of the Huygens-Fresnel principle will give us more than enough results. Said principle says the following:\n\n* Each point of the wavefront can be assumed as a secondary center for emitting spherical waves. The total disturbance that arrives at another point later is the result of the interference of all those secondary waves. *","cell_type":"markdown"}
{"type":"cell","id":"c0cb45","pos":5,"input":"## Fraunhofer diffraction. Rectangular opening.","cell_type":"markdown"}
{"type":"cell","id":"c3bb1d","pos":6,"input":"In this case, making the previous integral, the resulting field in $ P $ that is obtained is,\n\n$$ E_P (\\theta) = E_0 \\frac {sin(\\beta)} {\\beta} e^{i (k r_0 - \\omega t)} $$\n\nand the irradiance,\n\n$$ I_P (\\theta) = I_0 (\\frac{sin (\\beta)}{\\beta}) ^ 2 $$\n\nwhere in the previous expressions, $ \\beta = k a sin (\\theta) / 2 $. That is, the irradiance only depends on the angle $ \\theta $ that subtends $ P $ seen from the center of the aperture.\n\nIn the case where the point $ P $ is in the focal plane of a lens with focal $ f '$, $ sin (\\theta) \\simeq and_P / f' $ for small angles and $ \\beta = ka y_P / 2 f '$ If, on the other hand, we observe on a screen at a distance $ D $ much larger than the size of the aperture, $ \\beta = ka y_P / 2 D $.\n\nLet's see what form the previous function has. To observe the changes in the irradiance with the width of the slit or other parameters, the parameters of the code presented below can be modified.","cell_type":"markdown"}
{"type":"cell","id":"d22e32","pos":2,"input":"Let's consider the following situation: A monochromatic spherical wave from a point $ P_0 $ reaches an opening that we will denote by $ \\Sigma $. We want to see what is the wave that reaches a point $ P $ located after the opening.\n\n![Dif. General](generaldiff.svg)","cell_type":"markdown"}
{"type":"cell","id":"ef66f5","pos":15,"input":"Coming soon.","cell_type":"markdown"}
{"type":"cell","id":"ef7cf0","pos":10,"input":"## Fraunhofer diffraction. Circular opening","cell_type":"markdown"}
{"type":"file","last_load":1516806880546}
{"type":"settings","kernel":"python2","backend_state":"running","metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":2},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython2","version":"2.7.10"}},"kernel_state":"idle","kernel_usage":{"cpu":0,"memory":142188544},"trust":true}